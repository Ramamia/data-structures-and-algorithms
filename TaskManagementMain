package taskManagmentFinalDS;
/*packages should be named using a small letter as the first letter by
convention but classes are named by using a capital letter as the first letter also by convention :)*/

import java.util.Scanner;
import java.util.InputMismatchException;//for the Try and Catch
public class TaskManagementMain {


	    // ANSI escape codes for colors
		//im using this just for fun to color the output and make it look better
		/*its easily done by just adding the color's String name for example ANSI_RED before the
		output that i want to color in red (in System.out.prit) then add ANSI_RESET to make sure
		that the other print statements are not red too*/
		
		//reference: https://www.w3schools.blog/ansi-colors-java 
	    public static final String ANSI_RESET = "\u001B[0m";
	    public static final String ANSI_RED = "\u001B[31m";
	    public static final String ANSI_GREEN = "\u001B[32m";
	    public static final String ANSI_YELLOW = "\u001B[33m";
	    public static final String ANSI_BLUE = "\u001B[34m";
	    public static final String ANSI_PURPLE = "\u001B[35m";
	    public static final String ANSI_CYAN = "\u001B[36m";
	    public static final String ANSI_WHITE = "\u001B[37m";
	    
	
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        TaskManager taskManager = new TaskManager();
        CompletedTaskCheck completedTasksStack = new CompletedTaskCheck();

        while (true) {
        	//in an infinite while loop to let the user re-use the system
        	
        	System.out.println(ANSI_BLUE+"WELCOME TO MY TASK MANAGEMENT SYSTEM"+ANSI_RESET);
            System.out.println(ANSI_BLUE+"1. "+ANSI_RESET+"Add Task");
            System.out.println(ANSI_BLUE+"2. "+ANSI_RESET+"Display Tasks Ordered by Due Date");
            System.out.println(ANSI_BLUE+"3. "+ANSI_RESET+"Retrieve Urgent Tasks");
            System.out.println(ANSI_BLUE+"4. "+ANSI_RESET+"Sort/Show Task List Based on Category");
            System.out.println(ANSI_BLUE+"5. "+ANSI_RESET+"Mark Task as Completed");
            System.out.println(ANSI_BLUE+"6. "+ANSI_RESET+"View Completed Tasks History");
            System.out.println(ANSI_BLUE+"7. "+ANSI_RESET+"Exit");
            System.out.print(ANSI_BLUE+"Enter your choice: "+ANSI_RESET);
            
            try {
            int UserChoice = input.nextInt();
            input.nextLine();  // Consume newline

            switch (UserChoice) {
                case 1://adding a task
                    System.out.print("Enter task name: ");
                    String name = input.nextLine();
                    
                    int day, month, year;
                    // a do-while loop to g=make the user re-enter an input if it was not valid
                    do {
                    System.out.println("Enter task due date:- ");
                    System.out.println("Day: ");//1 to 31
                    day = input.nextInt();
                    
                    System.out.println("Month: ");//1 to 12
                    month = input.nextInt();
                    
                    System.out.print("Year: ");
                    year = input.nextInt();
                    
                    if (day < 1 || day > 31 || month < 1 || month > 12) {
                        System.out.println(ANSI_RED+"Invalid date. Please enter a valid day and month."+ANSI_RESET);
                    }
                } while (day < 1 || day > 31 || month < 1 || month > 12);

                    input.nextLine();  // Consume newline

                    
                    boolean urgent;
                    while (true) {
                        System.out.println("Is it urgent? ("+ANSI_GREEN+"true"+"/"+ANSI_RED+"false"+ANSI_RESET+")"); 
                        String urgentInput = input.nextLine().toLowerCase();//make it lower case so that FalsE=false,FALSE=false and so on...
                        if (urgentInput.equals("true")) {
                            urgent = true;
                            break;
                        } else if (urgentInput.equals("false")) {
                            urgent = false;
                            break;
                        } else {
                            System.out.println(ANSI_RED+"Invalid input. Please enter 'true' or 'false'."+ANSI_RESET);
                        }
                    }
                    
                                        
                    System.out.print("Enter category: ");
                    String category = input.nextLine();
                    
                    Task newTask = new Task(name, day, month, year, category, (urgent ? Task.Priority.URGENT : Task.Priority.NORMAL));
                    taskManager.addTask(newTask);
                    
                    System.out.println(ANSI_GREEN+"Task added successfully!"+ANSI_RESET);
                    break;
                    
                    
                case 2://display tasks ordered by due date
                    System.out.println(ANSI_YELLOW+"Tasks ordered by due date:"+ANSI_RESET);
                    taskManager.displayTasksByDueDate();
                    break;//works
                    
                    
                case 3://retrieve urgent tasks
                    System.out.println(ANSI_CYAN+"Urgent tasks:"+ANSI_RESET);
                    taskManager.retrieveUrgentTasks();
                    break;
                    
                case 4: //Sort/Show Task List Based on Category
                    System.out.println(ANSI_YELLOW+"Tasks sorted by category:"+ANSI_RESET);
                    taskManager.sortTasksByCategory();
                    break;
                    
                    
                case 5:
                    // Mark Task as Completed
                    System.out.print(ANSI_CYAN+"Enter the name of the completed task: "+ANSI_RESET);
                    String completedTaskName = input.nextLine();
                    // Search for the task in TaskManager
                    Task completedTask = taskManager.findTask(completedTaskName);
                    if (completedTask != null) {
                        completedTasksStack.addCompletedTask(completedTask);
                        System.out.println(ANSI_GREEN+"Task marked as completed!"+ANSI_RESET);
                    } else {
                        System.out.println(ANSI_RED+"SORRYY Task not found!"+ANSI_RESET);
                    }
                    break;//DONEEEE YESSS
                    
                    
                case 6:
                    // View Completed Tasks History
                    System.out.println(ANSI_YELLOW + "Completed tasks history:" + ANSI_RESET);
                    completedTasksStack.viewCompletedTasksHistory();
                    break;

                    
                    
                case 7://exit program
                    System.out.println(ANSI_CYAN+"Exiting..."+ANSI_RESET);
                    input.close();
                    System.exit(0);
                    
                default:
                    System.out.println(ANSI_RED+"Invalid choice. Please enter a number between 1 and 7."+ANSI_RESET);
            }
        } catch (InputMismatchException e) {
            System.out.println(ANSI_RED +"Invalid input. Please enter a valid integer choice."+ANSI_RESET);
            input.nextLine();  // Consume invalid input
        }}
        }
    }


